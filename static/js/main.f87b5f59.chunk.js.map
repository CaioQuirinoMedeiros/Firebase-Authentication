{"version":3,"sources":["firebase.ts","contexts/AuthContext.tsx","components/Signup.tsx","components/Login.tsx","components/Dashboard.tsx","components/UpdateProfile.tsx","components/ForgotPassword.tsx","routes/Route.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["firebaseApp","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loadingUser","setLoadingUser","signup","useCallback","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","loginWithGoogle","signInWithPopup","loginWithFacebook","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","useEffect","onAuthStateChanged","user","value","useMemo","Provider","useAuth","useContext","Signup","error","setError","loading","setLoading","emailRef","useRef","passwordRef","passwordConfirmationRef","handleSignupSubmit","e","a","preventDefault","current","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","required","ref","Button","disabled","to","Login","handleLoginSubmit","handleGoogleLoginSubmit","code","console","log","err","message","handleFacebookLoginSubmit","style","backgroundColor","border","block","onClick","size","marginRight","Dashboard","handleLogout","history","useHistory","handleUpdateProfileSubmit","promises","push","Promise","all","defaultValue","placeholder","ForgotPassword","successMessage","setSuccessMessage","handleResetPasswordSubmit","MyRoute","isPrivate","rest","pathname","state","from","location","Routes","basename","Route","exact","path","component","UpdateProfile","App","Container","minHeight","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f87b5f59.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/app'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = firebaseApp.auth()\r\n\r\nexport default firebaseApp\r\n","import React, {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState\r\n} from 'react'\r\nimport firebase, { User } from 'firebase'\r\n\r\nimport { auth } from '../firebase'\r\n\r\ninterface AuthContext {\r\n  currentUser: User | null\r\n  signup(credentials: {\r\n    email: string\r\n    password: string\r\n  }): Promise<firebase.auth.UserCredential>\r\n  login(credentials: {\r\n    email: string\r\n    password: string\r\n  }): Promise<firebase.auth.UserCredential>\r\n  logout(): Promise<void>\r\n  resetPassword(email: string | undefined): Promise<void>\r\n  updateEmail(email: string): Promise<void> | undefined\r\n  updatePassword(password: string): Promise<void> | undefined\r\n  loginWithGoogle(): Promise<firebase.auth.UserCredential>\r\n  loginWithFacebook(): Promise<firebase.auth.UserCredential>\r\n}\r\n\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\nconst facebookProvider = new firebase.auth.FacebookAuthProvider()\r\n\r\nconst AuthContext = createContext<AuthContext>({} as AuthContext)\r\n\r\nexport function AuthProvider({ children }: React.PropsWithChildren<{}>) {\r\n  const [currentUser, setCurrentUser] = useState<User | null>(null)\r\n  const [loadingUser, setLoadingUser] = useState(true)\r\n\r\n  const signup = useCallback(({ email, password }) => {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }, [])\r\n\r\n  const login = useCallback(({ email, password }) => {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }, [])\r\n\r\n  const loginWithGoogle = useCallback(() => {\r\n    return auth.signInWithPopup(googleProvider)\r\n  }, [])\r\n\r\n  const loginWithFacebook = useCallback(() => {\r\n    return auth.signInWithPopup(facebookProvider)\r\n  }, [])\r\n\r\n  const logout = useCallback(() => {\r\n    return auth.signOut()\r\n  }, [])\r\n\r\n  const resetPassword = useCallback((email: string) => {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }, [])\r\n\r\n  const updateEmail = useCallback(\r\n    (email: string) => {\r\n      return currentUser?.updateEmail(email)\r\n    },\r\n    [currentUser]\r\n  )\r\n\r\n  const updatePassword = useCallback(\r\n    (password: string) => {\r\n      return currentUser?.updatePassword(password)\r\n    },\r\n    [currentUser]\r\n  )\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setLoadingUser(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = useMemo(() => {\r\n    return {\r\n      currentUser,\r\n      signup,\r\n      login,\r\n      logout,\r\n      resetPassword,\r\n      updateEmail,\r\n      updatePassword,\r\n      loginWithGoogle,\r\n      loginWithFacebook\r\n    }\r\n  }, [\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    loginWithGoogle,\r\n    loginWithFacebook\r\n  ])\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loadingUser && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext)\r\n}\r\n","import React, { FormEvent, useCallback, useRef, useState } from 'react'\r\n\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function Signup() {\r\n  const { signup } = useAuth()\r\n\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const emailRef = useRef<HTMLInputElement>(null)\r\n  const passwordRef = useRef<HTMLInputElement>(null)\r\n  const passwordConfirmationRef = useRef<HTMLInputElement>(null)\r\n\r\n  const handleSignupSubmit = useCallback(\r\n    async (e: FormEvent) => {\r\n      e.preventDefault()\r\n      setLoading(true)\r\n\r\n      if (!emailRef.current?.value || !passwordRef.current?.value) {\r\n        return\r\n      }\r\n\r\n      if (\r\n        passwordConfirmationRef.current?.value !== passwordRef.current?.value\r\n      ) {\r\n        return setError('Passwords do not match')\r\n      }\r\n\r\n      try {\r\n        setError('')\r\n        await signup({\r\n          email: emailRef.current?.value,\r\n          password: passwordRef.current?.value\r\n        })\r\n      } catch {\r\n        setError('Failed to create an account')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    },\r\n    [signup]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center  mb-4'>Sign Up</h2>\r\n\r\n          {!!error && <Alert variant='danger'>{error}</Alert>}\r\n\r\n          <Form onSubmit={handleSignupSubmit}>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='email' required ref={emailRef}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                required\r\n                ref={passwordRef}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id='password-confirmation'>\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                required\r\n                ref={passwordConfirmationRef}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' className='w-100' disabled={loading}>\r\n              {loading ? 'Signing up...' : 'Sign Up'}\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        Already have an account? <Link to='login'>Log In</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { FormEvent, useCallback, useRef, useState } from 'react'\r\nimport { FaFacebookSquare, FaGooglePlusG } from 'react-icons/fa'\r\n\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function Login() {\r\n  const { login, loginWithGoogle, loginWithFacebook } = useAuth()\r\n\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const emailRef = useRef<HTMLInputElement>(null)\r\n  const passwordRef = useRef<HTMLInputElement>(null)\r\n\r\n  const handleLoginSubmit = useCallback(\r\n    async (e: FormEvent) => {\r\n      e.preventDefault()\r\n      setLoading(true)\r\n\r\n      if (!emailRef.current?.value || !passwordRef.current?.value) {\r\n        return\r\n      }\r\n\r\n      try {\r\n        setError('')\r\n        await login({\r\n          email: emailRef.current?.value,\r\n          password: passwordRef.current?.value\r\n        })\r\n      } catch {\r\n        setError('Failed to login')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    },\r\n    [login]\r\n  )\r\n\r\n  const handleGoogleLoginSubmit = useCallback(\r\n    async (e: FormEvent) => {\r\n      e.preventDefault()\r\n      setLoading(true)\r\n\r\n      try {\r\n        setError('')\r\n        await loginWithGoogle()\r\n      } catch (err) {\r\n        if (err.code === 'auth/popup-closed-by-user') {\r\n          return\r\n        }\r\n        console.log({ err })\r\n        setError(err.message || 'Failed to login with Google')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    },\r\n    [loginWithGoogle]\r\n  )\r\n\r\n  const handleFacebookLoginSubmit = useCallback(\r\n    async (e: FormEvent) => {\r\n      e.preventDefault()\r\n      setLoading(true)\r\n\r\n      try {\r\n        setError('')\r\n        await loginWithFacebook()\r\n      } catch (err) {\r\n        if (err.code === 'auth/popup-closed-by-user') {\r\n          return\r\n        }\r\n        console.log({ err })\r\n        setError(err.message || 'Failed to login with Facebook')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    },\r\n    [loginWithFacebook]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center  mb-4'>Login</h2>\r\n\r\n          {!!error && <Alert variant='danger'>{error}</Alert>}\r\n\r\n          <Form onSubmit={handleLoginSubmit}>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='email' required ref={emailRef}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                required\r\n                ref={passwordRef}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' className='w-100' disabled={loading}>\r\n              {loading ? 'Loging in...' : 'Log In'}\r\n            </Button>\r\n          </Form>\r\n\r\n          <div className='w-100 text-center mt-3 mb-5'>\r\n            <Link to='forgot-password'>Forgot Password?</Link>\r\n          </div>\r\n\r\n          <Button\r\n            style={{ backgroundColor: '#dd4b39', border: 0 }}\r\n            block\r\n            onClick={handleGoogleLoginSubmit}\r\n          >\r\n            <FaGooglePlusG size={30} style={{ marginRight: 20 }} /> Sign in with\r\n            Google\r\n          </Button>\r\n          <Button\r\n            style={{ backgroundColor: '#4064ac', border: 0 }}\r\n            block\r\n            onClick={handleFacebookLoginSubmit}\r\n          >\r\n            <FaFacebookSquare size={30} style={{ marginRight: 20 }} /> Sign in\r\n            with Facebook\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        Need an account? <Link to='signup'>Sign Up</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { Alert, Button, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function Dashboard() {\r\n  const { logout, currentUser } = useAuth()\r\n\r\n  const [error, setError] = useState('')\r\n\r\n  const handleLogout = useCallback(async () => {\r\n    try {\r\n      setError('')\r\n      await logout()\r\n    } catch {\r\n      setError('Failed to logout')\r\n    }\r\n  }, [logout])\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center  mb-4'>Profile</h2>\r\n          {!!error && <Alert variant='danger'>{error}</Alert>}\r\n          <strong>Email: </strong> {currentUser?.email}\r\n          <Link to='update-profile' className='btn btn-primary w-100 mt-3'>\r\n            Update profile\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        <Button variant='link' onClick={handleLogout}>\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { FormEvent, useCallback, useRef, useState } from 'react'\r\n\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function Signup() {\r\n  const { currentUser, updateEmail, updatePassword } = useAuth()\r\n  const history = useHistory()\r\n\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const emailRef = useRef<HTMLInputElement>(null)\r\n  const passwordRef = useRef<HTMLInputElement>(null)\r\n  const passwordConfirmationRef = useRef<HTMLInputElement>(null)\r\n\r\n  const handleUpdateProfileSubmit = useCallback(\r\n    async (e: FormEvent) => {\r\n      e.preventDefault()\r\n      setLoading(true)\r\n\r\n      if (!emailRef.current?.value) {\r\n        return setError('Fill in a valid e-mail')\r\n      }\r\n\r\n      if (\r\n        passwordConfirmationRef.current?.value !== passwordRef.current?.value\r\n      ) {\r\n        return setError('Passwords do not match')\r\n      }\r\n\r\n      const promises = []\r\n\r\n      if (emailRef.current.value !== currentUser?.email) {\r\n        promises.push(updateEmail(emailRef.current.value))\r\n      }\r\n\r\n      if (passwordRef.current?.value) {\r\n        promises.push(updatePassword(passwordRef.current.value))\r\n      }\r\n\r\n      try {\r\n        setError('')\r\n        await Promise.all(promises)\r\n        history.push('/')\r\n      } catch {\r\n        setError('Failed to update account')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    },\r\n    [updateEmail, updatePassword, currentUser, history]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center  mb-4'>Update Profile</h2>\r\n\r\n          {!!error && <Alert variant='danger'>{error}</Alert>}\r\n\r\n          <Form onSubmit={handleUpdateProfileSubmit}>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                required\r\n                ref={emailRef}\r\n                defaultValue={currentUser?.email || ''}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                ref={passwordRef}\r\n                placeholder='Leave blank to keep the same'\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id='password-confirmation'>\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                ref={passwordConfirmationRef}\r\n                placeholder='Leave blank to keep the same'\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button type='submit' className='w-100' disabled={loading}>\r\n              {loading ? 'Updating...' : 'Update'}\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        <Link to='/'>Cancel</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { FormEvent, useCallback, useRef, useState } from 'react'\r\n\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function ForgotPassword() {\r\n  const { resetPassword } = useAuth()\r\n\r\n  const [error, setError] = useState('')\r\n  const [successMessage, setSuccessMessage] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const emailRef = useRef<HTMLInputElement>(null)\r\n\r\n  const handleResetPasswordSubmit = useCallback(\r\n    async (e: FormEvent) => {\r\n      e.preventDefault()\r\n      setLoading(true)\r\n\r\n      try {\r\n        setError('')\r\n        setSuccessMessage('')\r\n\r\n        await resetPassword(emailRef.current?.value)\r\n\r\n        setSuccessMessage('Check your inbox for futher instructions.')\r\n      } catch {\r\n        setError('Failed to reset password')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    },\r\n    [resetPassword]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className='text-center  mb-4'>Password Reset</h2>\r\n\r\n          {!!error && <Alert variant='danger'>{error}</Alert>}\r\n          {!!successMessage && <Alert variant='success'>{successMessage}</Alert>}\r\n\r\n          <Form onSubmit={handleResetPasswordSubmit}>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='email' required ref={emailRef}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' className='w-100' disabled={loading}>\r\n              {loading ? 'Sending email...' : 'Reset password'}\r\n            </Button>\r\n          </Form>\r\n\r\n          <div className='w-100 text-center mt-3'>\r\n            <Link to='login'>Login</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        Need an account? <Link to='signup'>Sign Up</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom'\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\ninterface MyRouteProps extends RouteProps {\r\n  isPrivate?: boolean\r\n  guest?: boolean\r\n}\r\n\r\nconst MyRoute: React.FC<MyRouteProps> = ({ isPrivate, ...rest }) => {\r\n  const { currentUser } = useAuth()\r\n\r\n  return !!isPrivate === !!currentUser ? (\r\n    <Route {...rest} />\r\n  ) : (\r\n    <Redirect\r\n      to={{\r\n        pathname: isPrivate ? '/login' : '/',\r\n        state: { from: rest.location }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MyRoute\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch } from 'react-router-dom'\r\n\r\nimport Signup from '../components/Signup'\r\nimport Login from '../components/Login'\r\nimport Dashboard from '../components/Dashboard'\r\nimport UpdateProfile from '../components/UpdateProfile'\r\nimport ForgotPassword from '../components/ForgotPassword'\r\n\r\nimport Route from './Route'\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path='/' component={Dashboard} isPrivate />\r\n        <Route\r\n          exact\r\n          path='/update-profile'\r\n          component={UpdateProfile}\r\n          isPrivate\r\n        />\r\n        <Route path='/login' component={Login} />\r\n        <Route path='/forgot-password' component={ForgotPassword} />\r\n        <Route path='/signup' component={Signup} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nimport Routes from './routes'\r\nimport { AuthProvider } from './contexts/AuthContext'\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Container\r\n        className='d-flex align-items-center justify-content-center'\r\n        style={{ minHeight: '100vh' }}\r\n      >\r\n        <div className='w-100' style={{ maxWidth: 400 }}>\r\n          <Routes />\r\n        </div>\r\n      </Container>\r\n    </AuthProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}